# Workflow to build and test wheels.
# To work on the wheel building infrastructure on a fork, comment out:
#
# if: github.repository == 'numpy/numpy'
#
# in the get_commit_message job. Be sure to include [wheel build] in your commit
# message to trigger the build. All files related to wheel building are located
# at tools/wheels/
# Alternatively, you can add labels to the pull request in order to trigger wheel
# builds.
# The labels that trigger builds are:
# 36 - Build(for changes to the building process,
# 14 - Release(ensure wheels build before release)
name: Wheel builder

on:
  schedule:
    #        ┌───────────── minute (0 - 59)
    #        │  ┌───────────── hour (0 - 23)
    #        │  │ ┌───────────── day of the month (1 - 31)
    #        │  │ │ ┌───────────── month (1 - 12 or JAN-DEC)
    #        │  │ │ │ ┌───────────── day of the week (0 - 6 or SUN-SAT)
    #        │  │ │ │ │
    - cron: "42 1 * * 4"
  push:
  pull_request:

  workflow_dispatch:

jobs:
  build_wheels:
    name: Build wheel for ${{ matrix.python }}-${{ matrix.buildplat[1] }}
    runs-on: ${{ matrix.buildplat[0] }}
    strategy:
      # Ensure that a wheel builder finishes even if another fails
      fail-fast: false
      matrix:
        # Github Actions doesn't support pairing matrix values together, let's improvise
        # https://github.com/github/feedback/discussions/7835#discussioncomment-1769026
        buildplat:
          - [ubuntu-22.04, manylinux_x86_64]
          - [macos-11, macosx_*]
          - [windows-2022, win_amd64]
          - [windows-2022, win_arm64]
          - [windows-2022, win32]
        # TODO: uncomment PyPy 3.9 builds once PyPy
        # re-releases a new minor version
        # NOTE: This needs a bump of cibuildwheel version, also, once that happens.
        python: ["cp38", "cp39", "cp310", "cp311", "pp38"] #, "pp39"]
        exclude:
          # Don't build PyPy 32-bit windows
          - buildplat: [windows-2022, win32]
            python: "pp38"
          - buildplat: [windows-2022, win32]
            python: "pp39"
    env:
      IS_32_BIT: ${{ matrix.buildplat[1] == 'win32' }}
    steps:
      - name: Checkout numpy
        uses: actions/checkout@v3
        with:
          submodules: true
          # versioneer.py requires the latest tag to be reachable. Here we
          # fetch the complete history to get access to the tags.
          # A shallow clone can work when the following issue is resolved:
          # https://github.com/actions/checkout/issues/338
          fetch-depth: 0

      # Used to push the built wheels
      - uses: actions/setup-python@v3
        with:
          python-version: "3.x"

      - name: Configure mingw for 32-bit builds
        run: |
          # Force 32-bit mingw
          choco uninstall mingw
          choco install -y mingw --forcex86 --force --version=7.3.0
          echo "C:\ProgramData\chocolatey\lib\mingw\tools\install\mingw32\bin" | Out-File -FilePath $env:GITHUB_PATH -Encoding utf8 -Append
          refreshenv
        if: ${{ env.IS_32_BIT == 'true' }}

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.11.2
        env:
          CIBW_BUILD: ${{ matrix.python }}-${{ matrix.buildplat[1] }}

